NAME = iskemu
SRCS = $(shell find src/ -name "*.c")

WORK_DIR  = $(shell pwd)
DST_DIR   = $(WORK_DIR)/build
OBJS = $(addprefix $(DST_DIR)/, $(addsuffix .o, $(basename $(SRCS))))
INC_PATH += $(WORK_DIR)/include
INCFLAGS += $(addprefix -I, $(INC_PATH))

LIBS = -lSDL2 -lreadline

CFLAGS   += -O2 -MMD -Wall $(INCFLAGS)
LINKAGE = $(OBJS)

INTERPRETER = $(DST_DIR)/iskemu-unisys

$(shell mkdir -p $(DST_DIR))

## Compilation Rules
## From NJU-ProjectN AM Makefile

### Rule (compile): a single `.c` -> `.o` (gcc)
$(DST_DIR)/%.o: %.c
	@mkdir -p $(dir $@) && echo + CC $<
	@$(CC) -std=gnu11 $(CFLAGS) -c -o $@ $(realpath $<)

### Rule (compile): a single `.S` -> `.o` (gcc, which preprocesses and calls as)
$(DST_DIR)/%.o: %.S
	@mkdir -p $(dir $@) && echo + AS $<
	@$(AS) $(ASFLAGS) -c -o $@ $(realpath $<)

### Rule (`#include` dependencies): paste in `.d` files generated by gcc on `-MMD`
-include $(addprefix $(DST_DIR)/, $(addsuffix .d, $(basename $(SRCS))))

AS        = gcc
CC        = gcc
CXX       = g++
LD        = ld
OBJDUMP   = objdump
OBJCOPY   = objcopy
READELF   = readelf

ifeq ($(MAKECMDGOALS),)
  MAKECMDGOALS  = $(INTERPRETER)
  .DEFAULT_GOAL = $(INTERPRETER)
endif

$(INTERPRETER): $(LINKAGE)
	@echo + LD "->" $(INTERPRETER)
	@$(CC) -o $(INTERPRETER) $(LINKAGE) $(LIBS)

run: $(INTERPRETER)
	@$(INTERPRETER) -l $(DST_DIR)/iskemu-unisys.log

count:
	@echo lines: `find . | grep -e \\\.[ch]| xargs cat | grep -v // | grep -v ^$$ | wc -l`

clean:
	-@rm -r build

.PHONY: clean count